version: '3.5'

services:
  unit_tests:
    container_name: unit_tests
    build:
      context: ../
      dockerfile: ./test/Dockerfile
    environment:
      - "MONGO_URL=mongodb://mongo:27017"
      - "SQLSERVER_URL=sqlserver://sa:P%40ssW0rd%21@mssql:1433"
    volumes:
      - ../:/root/out
    working_dir: "/root"
    command: >
      sh -c "
        go test -v -tags musl -coverprofile=./out/coverage.out ./...
      "
    depends_on:
      - mongo
      - mssql
  mongo:
    container_name: mongo
    image: mongo:latest
    ports:
      - "27017-27019:27017-27019"
    expose:
      - "27017-27019"
    environment:
      - MONGO_INITDB_DATABASE=Example
    volumes:
      - ./mock/mongo:/docker-entrypoint-initdb.d
      - ../scripts/mongo:/docker-entrypoint-initdb.d/collection:ro
    restart: on-failure
  mssql:
    container_name: mssql
    image: mcr.microsoft.com/mssql/server:2019-latest
    ports:
      - "1433:1433"
    expose:
      - "1433"
    environment:
      SA_PASSWORD: "P@ssW0rd!"
      ACCEPT_EULA: "Y"
    volumes:
      - ./mock/mssql:/usr/src/app
      - ../scripts/sql:/usr/src/app/procedure:ro
    # bash will be executed from that path, our scripts folder
    working_dir: /usr/src/app
    # run the entrypoint.sh that will import the data AND sqlserver
    command: sh -c ' chmod +x ./entrypoint.sh; ./entrypoint.sh & /opt/mssql/bin/sqlservr;'
    restart: on-failure
